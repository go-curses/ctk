// Code generated by "stringer -output enums_string.go -type AssistantPageType,BuilderError,CellRendererMode,CellRendererAccelMode,CellType,CListDragPos,CTreePos,CTreeLineStyle,CTreeExpanderStyle,CTreeExpansionType,EntryIconPosition,AnchorType,ArrowPlacement,ArrowType,ButtonBoxStyle,DeleteType,DirectionType,ExpanderStyle,SensitivityType,SideType,TextDirection,MatchType,MenuDirectionType,MessageType,MetricType,MovementStep,ScrollStep,CornerType,PackType,LayoutStyle,PathPriorityType,PathType,PolicyType,PositionType,ReliefStyle,ScrollType,SelectionMode,ShadowType,SubmenuDirection,SubmenuPlacement,ToolbarStyle,UpdateType,Visibility,WindowType,WindowTypeHint,WindowEdge,Gravity,WindowPosition,SortType,IMPreeditStyle,IMStatusStyle,PackDirection,PrintPages,PageSet,NumberUpLayout,Unit,TreeViewGridLines,FileChooserAction,FileChooserConfirmation,FileChooserError,LoadState,ReloadState,LocationMode,OperationMode,StartupMode,FileChooserProp,IconThemeError,ButtonsType,NotebookTab,ArgFlags,ProgressBarStyle,ProgressBarOrientation,RcTokenType,RecentSortType,RecentChooserError,RecentChooserProp,RecentManagerError,SizeGroupMode,SpinButtonUpdatePolicy,SpinType,TextBufferTargetInfo,TextWindowType,ToolbarChildType,ToolbarSpaceStyle,TreeViewMode,TreeViewDropPosition,TreeViewColumnSizing,WidgetHelpType,ErrorType,TokenType,ExtensionMode"; DO NOT EDIT.

package enums

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ASSISTANT_PAGE_CONTENT-0]
	_ = x[ASSISTANT_PAGE_INTRO-1]
	_ = x[ASSISTANT_PAGE_CONFIRM-2]
	_ = x[ASSISTANT_PAGE_SUMMARY-3]
	_ = x[ASSISTANT_PAGE_PROGRESS-4]
}

const _AssistantPageType_name = "ASSISTANT_PAGE_CONTENTASSISTANT_PAGE_INTROASSISTANT_PAGE_CONFIRMASSISTANT_PAGE_SUMMARYASSISTANT_PAGE_PROGRESS"

var _AssistantPageType_index = [...]uint8{0, 22, 42, 64, 86, 109}

func (i AssistantPageType) String() string {
	if i >= AssistantPageType(len(_AssistantPageType_index)-1) {
		return "AssistantPageType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _AssistantPageType_name[_AssistantPageType_index[i]:_AssistantPageType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[BUILDER_ERROR_INVALID_TYPE_FUNCTION-0]
	_ = x[BUILDER_ERROR_UNHANDLED_TAG-1]
	_ = x[BUILDER_ERROR_MISSINC_ATTRIBUTE-2]
	_ = x[BUILDER_ERROR_INVALID_ATTRIBUTE-3]
	_ = x[BUILDER_ERROR_INVALID_TAG-4]
	_ = x[BUILDER_ERROR_MISSINC_PROPERTY_VALUE-5]
	_ = x[BUILDER_ERROR_INVALID_VALUE-6]
	_ = x[BUILDER_ERROR_VERSION_MISMATCH-7]
	_ = x[BUILDER_ERROR_DUPLICATE_ID-8]
}

const _BuilderError_name = "BUILDER_ERROR_INVALID_TYPE_FUNCTIONBUILDER_ERROR_UNHANDLED_TAGBUILDER_ERROR_MISSINC_ATTRIBUTEBUILDER_ERROR_INVALID_ATTRIBUTEBUILDER_ERROR_INVALID_TAGBUILDER_ERROR_MISSINC_PROPERTY_VALUEBUILDER_ERROR_INVALID_VALUEBUILDER_ERROR_VERSION_MISMATCHBUILDER_ERROR_DUPLICATE_ID"

var _BuilderError_index = [...]uint16{0, 35, 62, 93, 124, 149, 185, 212, 242, 268}

func (i BuilderError) String() string {
	if i >= BuilderError(len(_BuilderError_index)-1) {
		return "BuilderError(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _BuilderError_name[_BuilderError_index[i]:_BuilderError_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CELL_RENDERER_MODE_INERT-0]
	_ = x[CELL_RENDERER_MODE_ACTIVATABLE-1]
	_ = x[CELL_RENDERER_MODE_EDITABLE-2]
}

const _CellRendererMode_name = "CELL_RENDERER_MODE_INERTCELL_RENDERER_MODE_ACTIVATABLECELL_RENDERER_MODE_EDITABLE"

var _CellRendererMode_index = [...]uint8{0, 24, 54, 81}

func (i CellRendererMode) String() string {
	if i >= CellRendererMode(len(_CellRendererMode_index)-1) {
		return "CellRendererMode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _CellRendererMode_name[_CellRendererMode_index[i]:_CellRendererMode_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CELL_RENDERER_ACCEL_MODE_CTK-0]
	_ = x[CELL_RENDERER_ACCEL_MODE_OTHER-1]
}

const _CellRendererAccelMode_name = "CELL_RENDERER_ACCEL_MODE_CTKCELL_RENDERER_ACCEL_MODE_OTHER"

var _CellRendererAccelMode_index = [...]uint8{0, 28, 58}

func (i CellRendererAccelMode) String() string {
	if i >= CellRendererAccelMode(len(_CellRendererAccelMode_index)-1) {
		return "CellRendererAccelMode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _CellRendererAccelMode_name[_CellRendererAccelMode_index[i]:_CellRendererAccelMode_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CELL_EMPTY-0]
	_ = x[CELL_TEXT-1]
	_ = x[CELL_PIXMAP-2]
	_ = x[CELL_PIXTEXT-3]
	_ = x[CELL_WIDGET-4]
}

const _CellType_name = "CELL_EMPTYCELL_TEXTCELL_PIXMAPCELL_PIXTEXTCELL_WIDGET"

var _CellType_index = [...]uint8{0, 10, 19, 30, 42, 53}

func (i CellType) String() string {
	if i >= CellType(len(_CellType_index)-1) {
		return "CellType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _CellType_name[_CellType_index[i]:_CellType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CLIST_DRAC_NONE-0]
	_ = x[CLIST_DRAC_BEFORE-1]
	_ = x[CLIST_DRAC_INTO-2]
	_ = x[CLIST_DRAC_AFTER-3]
}

const _CListDragPos_name = "CLIST_DRAC_NONECLIST_DRAC_BEFORECLIST_DRAC_INTOCLIST_DRAC_AFTER"

var _CListDragPos_index = [...]uint8{0, 15, 32, 47, 63}

func (i CListDragPos) String() string {
	if i >= CListDragPos(len(_CListDragPos_index)-1) {
		return "CListDragPos(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _CListDragPos_name[_CListDragPos_index[i]:_CListDragPos_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CTREE_POS_BEFORE-0]
	_ = x[CTREE_POS_AS_CHILD-1]
	_ = x[CTREE_POS_AFTER-2]
}

const _CTreePos_name = "CTREE_POS_BEFORECTREE_POS_AS_CHILDCTREE_POS_AFTER"

var _CTreePos_index = [...]uint8{0, 16, 34, 49}

func (i CTreePos) String() string {
	if i >= CTreePos(len(_CTreePos_index)-1) {
		return "CTreePos(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _CTreePos_name[_CTreePos_index[i]:_CTreePos_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CTREE_LINES_NONE-0]
	_ = x[CTREE_LINES_SOLID-1]
	_ = x[CTREE_LINES_DOTTED-2]
	_ = x[CTREE_LINES_TABBED-3]
}

const _CTreeLineStyle_name = "CTREE_LINES_NONECTREE_LINES_SOLIDCTREE_LINES_DOTTEDCTREE_LINES_TABBED"

var _CTreeLineStyle_index = [...]uint8{0, 16, 33, 51, 69}

func (i CTreeLineStyle) String() string {
	if i >= CTreeLineStyle(len(_CTreeLineStyle_index)-1) {
		return "CTreeLineStyle(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _CTreeLineStyle_name[_CTreeLineStyle_index[i]:_CTreeLineStyle_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CTREE_EXPANDER_NONE-0]
	_ = x[CTREE_EXPANDER_SQUARE-1]
	_ = x[CTREE_EXPANDER_TRIANGLE-2]
	_ = x[CTREE_EXPANDER_CIRCULAR-3]
}

const _CTreeExpanderStyle_name = "CTREE_EXPANDER_NONECTREE_EXPANDER_SQUARECTREE_EXPANDER_TRIANGLECTREE_EXPANDER_CIRCULAR"

var _CTreeExpanderStyle_index = [...]uint8{0, 19, 40, 63, 86}

func (i CTreeExpanderStyle) String() string {
	if i >= CTreeExpanderStyle(len(_CTreeExpanderStyle_index)-1) {
		return "CTreeExpanderStyle(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _CTreeExpanderStyle_name[_CTreeExpanderStyle_index[i]:_CTreeExpanderStyle_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CTREE_EXPANSION_EXPAND-0]
	_ = x[CTREE_EXPANSION_EXPAND_RECURSIVE-1]
	_ = x[CTREE_EXPANSION_COLLAPSE-2]
	_ = x[CTREE_EXPANSION_COLLAPSE_RECURSIVE-3]
	_ = x[CTREE_EXPANSION_TOGGLE-4]
	_ = x[CTREE_EXPANSION_TOGGLE_RECURSIVE-5]
}

const _CTreeExpansionType_name = "CTREE_EXPANSION_EXPANDCTREE_EXPANSION_EXPAND_RECURSIVECTREE_EXPANSION_COLLAPSECTREE_EXPANSION_COLLAPSE_RECURSIVECTREE_EXPANSION_TOGGLECTREE_EXPANSION_TOGGLE_RECURSIVE"

var _CTreeExpansionType_index = [...]uint8{0, 22, 54, 78, 112, 134, 166}

func (i CTreeExpansionType) String() string {
	if i >= CTreeExpansionType(len(_CTreeExpansionType_index)-1) {
		return "CTreeExpansionType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _CTreeExpansionType_name[_CTreeExpansionType_index[i]:_CTreeExpansionType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ENTRY_ICON_PRIMARY-0]
	_ = x[ENTRY_ICON_SECONDARY-1]
}

const _EntryIconPosition_name = "ENTRY_ICON_PRIMARYENTRY_ICON_SECONDARY"

var _EntryIconPosition_index = [...]uint8{0, 18, 38}

func (i EntryIconPosition) String() string {
	if i >= EntryIconPosition(len(_EntryIconPosition_index)-1) {
		return "EntryIconPosition(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _EntryIconPosition_name[_EntryIconPosition_index[i]:_EntryIconPosition_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ANCHOR_CENTER-0]
	_ = x[ANCHOR_NORTH-1]
	_ = x[ANCHOR_NORTH_WEST-2]
	_ = x[ANCHOR_NORTH_EAST-3]
	_ = x[ANCHOR_SOUTH-4]
	_ = x[ANCHOR_SOUTH_WEST-5]
	_ = x[ANCHOR_SOUTH_EAST-6]
	_ = x[ANCHOR_WEST-7]
	_ = x[ANCHOR_EAST-8]
}

const _AnchorType_name = "ANCHOR_CENTERANCHOR_NORTHANCHOR_NORTH_WESTANCHOR_NORTH_EASTANCHOR_SOUTHANCHOR_SOUTH_WESTANCHOR_SOUTH_EASTANCHOR_WESTANCHOR_EAST"

var _AnchorType_index = [...]uint8{0, 13, 25, 42, 59, 71, 88, 105, 116, 127}

func (i AnchorType) String() string {
	if i >= AnchorType(len(_AnchorType_index)-1) {
		return "AnchorType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _AnchorType_name[_AnchorType_index[i]:_AnchorType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ARROWS_BOTH-0]
	_ = x[ARROWS_START-1]
	_ = x[ARROWS_END-2]
}

const _ArrowPlacement_name = "ARROWS_BOTHARROWS_STARTARROWS_END"

var _ArrowPlacement_index = [...]uint8{0, 11, 23, 33}

func (i ArrowPlacement) String() string {
	if i >= ArrowPlacement(len(_ArrowPlacement_index)-1) {
		return "ArrowPlacement(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ArrowPlacement_name[_ArrowPlacement_index[i]:_ArrowPlacement_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ArrowUp-0]
	_ = x[ArrowDown-1]
	_ = x[ArrowLeft-2]
	_ = x[ArrowRight-3]
	_ = x[ArrowNone-4]
}

const _ArrowType_name = "ArrowUpArrowDownArrowLeftArrowRightArrowNone"

var _ArrowType_index = [...]uint8{0, 7, 16, 25, 35, 44}

func (i ArrowType) String() string {
	if i >= ArrowType(len(_ArrowType_index)-1) {
		return "ArrowType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ArrowType_name[_ArrowType_index[i]:_ArrowType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[BUTTONBOX_DEFAULT_STYLE-0]
	_ = x[BUTTONBOX_SPREAD-1]
	_ = x[BUTTONBOX_EDGE-2]
	_ = x[BUTTONBOX_START-3]
	_ = x[BUTTONBOX_END-4]
	_ = x[BUTTONBOX_CENTER-5]
	_ = x[BUTTONBOX_EXPAND-6]
}

const _ButtonBoxStyle_name = "BUTTONBOX_DEFAULT_STYLEBUTTONBOX_SPREADBUTTONBOX_EDGEBUTTONBOX_STARTBUTTONBOX_ENDBUTTONBOX_CENTERBUTTONBOX_EXPAND"

var _ButtonBoxStyle_index = [...]uint8{0, 23, 39, 53, 68, 81, 97, 113}

func (i ButtonBoxStyle) String() string {
	if i >= ButtonBoxStyle(len(_ButtonBoxStyle_index)-1) {
		return "ButtonBoxStyle(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ButtonBoxStyle_name[_ButtonBoxStyle_index[i]:_ButtonBoxStyle_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DELETE_CHARS-0]
	_ = x[DELETE_WORD_ENDS-1]
	_ = x[DELETE_WORDS-2]
	_ = x[DELETE_DISPLAY_LINES-3]
	_ = x[DELETE_DISPLAY_LINE_ENDS-4]
	_ = x[DELETE_PARAGRAPH_ENDS-5]
	_ = x[DELETE_PARAGRAPHS-6]
	_ = x[DELETE_WHITESPACE-7]
}

const _DeleteType_name = "DELETE_CHARSDELETE_WORD_ENDSDELETE_WORDSDELETE_DISPLAY_LINESDELETE_DISPLAY_LINE_ENDSDELETE_PARAGRAPH_ENDSDELETE_PARAGRAPHSDELETE_WHITESPACE"

var _DeleteType_index = [...]uint8{0, 12, 28, 40, 60, 84, 105, 122, 139}

func (i DeleteType) String() string {
	if i >= DeleteType(len(_DeleteType_index)-1) {
		return "DeleteType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DeleteType_name[_DeleteType_index[i]:_DeleteType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DIR_TAB_FORWARD-0]
	_ = x[DIR_TAB_BACKWARD-1]
	_ = x[DIR_UP-2]
	_ = x[DIR_DOWN-3]
	_ = x[DIR_LEFT-4]
	_ = x[DIR_RIGHT-5]
}

const _DirectionType_name = "DIR_TAB_FORWARDDIR_TAB_BACKWARDDIR_UPDIR_DOWNDIR_LEFTDIR_RIGHT"

var _DirectionType_index = [...]uint8{0, 15, 31, 37, 45, 53, 62}

func (i DirectionType) String() string {
	if i >= DirectionType(len(_DirectionType_index)-1) {
		return "DirectionType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DirectionType_name[_DirectionType_index[i]:_DirectionType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EXPANDER_COLLAPSED-0]
	_ = x[EXPANDER_SEMI_COLLAPSED-1]
	_ = x[EXPANDER_SEMI_EXPANDED-2]
	_ = x[EXPANDER_EXPANDED-3]
}

const _ExpanderStyle_name = "EXPANDER_COLLAPSEDEXPANDER_SEMI_COLLAPSEDEXPANDER_SEMI_EXPANDEDEXPANDER_EXPANDED"

var _ExpanderStyle_index = [...]uint8{0, 18, 41, 63, 80}

func (i ExpanderStyle) String() string {
	if i >= ExpanderStyle(len(_ExpanderStyle_index)-1) {
		return "ExpanderStyle(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ExpanderStyle_name[_ExpanderStyle_index[i]:_ExpanderStyle_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SensitivityAuto-0]
	_ = x[SensitivityOn-1]
	_ = x[SensitivityOff-2]
}

const _SensitivityType_name = "SensitivityAutoSensitivityOnSensitivityOff"

var _SensitivityType_index = [...]uint8{0, 15, 28, 42}

func (i SensitivityType) String() string {
	if i >= SensitivityType(len(_SensitivityType_index)-1) {
		return "SensitivityType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SensitivityType_name[_SensitivityType_index[i]:_SensitivityType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SIDE_TOP-0]
	_ = x[SIDE_BOTTOM-1]
	_ = x[SIDE_LEFT-2]
	_ = x[SIDE_RIGHT-3]
}

const _SideType_name = "SIDE_TOPSIDE_BOTTOMSIDE_LEFTSIDE_RIGHT"

var _SideType_index = [...]uint8{0, 8, 19, 28, 38}

func (i SideType) String() string {
	if i >= SideType(len(_SideType_index)-1) {
		return "SideType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SideType_name[_SideType_index[i]:_SideType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TextDirNone-0]
	_ = x[TextDirLtr-1]
	_ = x[TextDirRtl-2]
}

const _TextDirection_name = "TextDirNoneTextDirLtrTextDirRtl"

var _TextDirection_index = [...]uint8{0, 11, 21, 31}

func (i TextDirection) String() string {
	if i >= TextDirection(len(_TextDirection_index)-1) {
		return "TextDirection(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TextDirection_name[_TextDirection_index[i]:_TextDirection_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MATCH_ALL-0]
	_ = x[MATCH_ALL_TAIL-1]
	_ = x[MATCH_HEAD-2]
	_ = x[MATCH_TAIL-3]
	_ = x[MATCH_EXACT-4]
	_ = x[MATCH_LAST-5]
}

const _MatchType_name = "MATCH_ALLMATCH_ALL_TAILMATCH_HEADMATCH_TAILMATCH_EXACTMATCH_LAST"

var _MatchType_index = [...]uint8{0, 9, 23, 33, 43, 54, 64}

func (i MatchType) String() string {
	if i >= MatchType(len(_MatchType_index)-1) {
		return "MatchType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MatchType_name[_MatchType_index[i]:_MatchType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MENU_DIR_PARENT-0]
	_ = x[MENU_DIR_CHILD-1]
	_ = x[MENU_DIR_NEXT-2]
	_ = x[MENU_DIR_PREV-3]
}

const _MenuDirectionType_name = "MENU_DIR_PARENTMENU_DIR_CHILDMENU_DIR_NEXTMENU_DIR_PREV"

var _MenuDirectionType_index = [...]uint8{0, 15, 29, 42, 55}

func (i MenuDirectionType) String() string {
	if i >= MenuDirectionType(len(_MenuDirectionType_index)-1) {
		return "MenuDirectionType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MenuDirectionType_name[_MenuDirectionType_index[i]:_MenuDirectionType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MESSAGE_INFO-0]
	_ = x[MESSAGE_WARNING-1]
	_ = x[MESSAGE_QUESTION-2]
	_ = x[MESSAGE_ERROR-3]
	_ = x[MESSAGE_OTHER-4]
}

const _MessageType_name = "MESSAGE_INFOMESSAGE_WARNINGMESSAGE_QUESTIONMESSAGE_ERRORMESSAGE_OTHER"

var _MessageType_index = [...]uint8{0, 12, 27, 43, 56, 69}

func (i MessageType) String() string {
	if i >= MessageType(len(_MessageType_index)-1) {
		return "MessageType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MessageType_name[_MessageType_index[i]:_MessageType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIXELS-0]
	_ = x[INCHES-1]
	_ = x[CENTIMETERS-2]
}

const _MetricType_name = "PIXELSINCHESCENTIMETERS"

var _MetricType_index = [...]uint8{0, 6, 12, 23}

func (i MetricType) String() string {
	if i >= MetricType(len(_MetricType_index)-1) {
		return "MetricType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MetricType_name[_MetricType_index[i]:_MetricType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MOVEMENT_LOGICAL_POSITIONS-0]
	_ = x[MOVEMENT_VISUAL_POSITIONS-1]
	_ = x[MOVEMENT_WORDS-2]
	_ = x[MOVEMENT_DISPLAY_LINES-3]
	_ = x[MOVEMENT_DISPLAY_LINE_ENDS-4]
	_ = x[MOVEMENT_PARAGRAPHS-5]
	_ = x[MOVEMENT_PARAGRAPH_ENDS-6]
	_ = x[MOVEMENT_PAGES-7]
	_ = x[MOVEMENT_BUFFER_ENDS-8]
	_ = x[MOVEMENT_HORIZONTAL_PAGES-9]
}

const _MovementStep_name = "MOVEMENT_LOGICAL_POSITIONSMOVEMENT_VISUAL_POSITIONSMOVEMENT_WORDSMOVEMENT_DISPLAY_LINESMOVEMENT_DISPLAY_LINE_ENDSMOVEMENT_PARAGRAPHSMOVEMENT_PARAGRAPH_ENDSMOVEMENT_PAGESMOVEMENT_BUFFER_ENDSMOVEMENT_HORIZONTAL_PAGES"

var _MovementStep_index = [...]uint8{0, 26, 51, 65, 87, 113, 132, 155, 169, 189, 214}

func (i MovementStep) String() string {
	if i >= MovementStep(len(_MovementStep_index)-1) {
		return "MovementStep(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MovementStep_name[_MovementStep_index[i]:_MovementStep_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SCROLL_STEPS-0]
	_ = x[SCROLL_PAGES-1]
	_ = x[SCROLL_ENDS-2]
	_ = x[SCROLL_HORIZONTAL_STEPS-3]
	_ = x[SCROLL_HORIZONTAL_PAGES-4]
	_ = x[SCROLL_HORIZONTAL_ENDS-5]
}

const _ScrollStep_name = "SCROLL_STEPSSCROLL_PAGESSCROLL_ENDSSCROLL_HORIZONTAL_STEPSSCROLL_HORIZONTAL_PAGESSCROLL_HORIZONTAL_ENDS"

var _ScrollStep_index = [...]uint8{0, 12, 24, 35, 58, 81, 103}

func (i ScrollStep) String() string {
	if i >= ScrollStep(len(_ScrollStep_index)-1) {
		return "ScrollStep(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ScrollStep_name[_ScrollStep_index[i]:_ScrollStep_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CornerTopLeft-0]
	_ = x[CornerBottomLeft-1]
	_ = x[CornerTopRight-2]
	_ = x[CornerBottomRight-3]
}

const _CornerType_name = "CornerTopLeftCornerBottomLeftCornerTopRightCornerBottomRight"

var _CornerType_index = [...]uint8{0, 13, 29, 43, 60}

func (i CornerType) String() string {
	if i >= CornerType(len(_CornerType_index)-1) {
		return "CornerType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _CornerType_name[_CornerType_index[i]:_CornerType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PackStart-0]
	_ = x[PackEnd-1]
}

const _PackType_name = "PackStartPackEnd"

var _PackType_index = [...]uint8{0, 9, 16}

func (i PackType) String() string {
	if i >= PackType(len(_PackType_index)-1) {
		return "PackType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PackType_name[_PackType_index[i]:_PackType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[LayoutStart-0]
	_ = x[LayoutEnd-1]
}

const _LayoutStyle_name = "LayoutStartLayoutEnd"

var _LayoutStyle_index = [...]uint8{0, 11, 20}

func (i LayoutStyle) String() string {
	if i >= LayoutStyle(len(_LayoutStyle_index)-1) {
		return "LayoutStyle(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LayoutStyle_name[_LayoutStyle_index[i]:_LayoutStyle_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PATH_PRIO_LOWEST-0]
	_ = x[PATH_PRIO_CTK-4]
	_ = x[PATH_PRIO_APPLICATION-8]
	_ = x[PATH_PRIO_THEME-10]
	_ = x[PATH_PRIO_RC-12]
	_ = x[PATH_PRIO_HIGHEST-15]
}

const (
	_PathPriorityType_name_0 = "PATH_PRIO_LOWEST"
	_PathPriorityType_name_1 = "PATH_PRIO_CTK"
	_PathPriorityType_name_2 = "PATH_PRIO_APPLICATION"
	_PathPriorityType_name_3 = "PATH_PRIO_THEME"
	_PathPriorityType_name_4 = "PATH_PRIO_RC"
	_PathPriorityType_name_5 = "PATH_PRIO_HIGHEST"
)

func (i PathPriorityType) String() string {
	switch {
	case i == 0:
		return _PathPriorityType_name_0
	case i == 4:
		return _PathPriorityType_name_1
	case i == 8:
		return _PathPriorityType_name_2
	case i == 10:
		return _PathPriorityType_name_3
	case i == 12:
		return _PathPriorityType_name_4
	case i == 15:
		return _PathPriorityType_name_5
	default:
		return "PathPriorityType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PATH_WIDGET-0]
	_ = x[PATH_WIDGET_CLASS-1]
	_ = x[PATH_CLASS-2]
}

const _PathType_name = "PATH_WIDGETPATH_WIDGET_CLASSPATH_CLASS"

var _PathType_index = [...]uint8{0, 11, 28, 38}

func (i PathType) String() string {
	if i >= PathType(len(_PathType_index)-1) {
		return "PathType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PathType_name[_PathType_index[i]:_PathType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PolicyAlways-0]
	_ = x[PolicyAutomatic-1]
	_ = x[PolicyNever-2]
}

const _PolicyType_name = "PolicyAlwaysPolicyAutomaticPolicyNever"

var _PolicyType_index = [...]uint8{0, 12, 27, 38}

func (i PolicyType) String() string {
	if i >= PolicyType(len(_PolicyType_index)-1) {
		return "PolicyType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PolicyType_name[_PolicyType_index[i]:_PolicyType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[POS_LEFT-0]
	_ = x[POS_RIGHT-1]
	_ = x[POS_TOP-2]
	_ = x[POS_BOTTOM-3]
}

const _PositionType_name = "POS_LEFTPOS_RIGHTPOS_TOPPOS_BOTTOM"

var _PositionType_index = [...]uint8{0, 8, 17, 24, 34}

func (i PositionType) String() string {
	if i >= PositionType(len(_PositionType_index)-1) {
		return "PositionType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PositionType_name[_PositionType_index[i]:_PositionType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[RELIEF_NORMAL-0]
	_ = x[RELIEF_HALF-1]
	_ = x[RELIEF_NONE-2]
}

const _ReliefStyle_name = "RELIEF_NORMALRELIEF_HALFRELIEF_NONE"

var _ReliefStyle_index = [...]uint8{0, 13, 24, 35}

func (i ReliefStyle) String() string {
	if i >= ReliefStyle(len(_ReliefStyle_index)-1) {
		return "ReliefStyle(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ReliefStyle_name[_ReliefStyle_index[i]:_ReliefStyle_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SCROLL_NONE-0]
	_ = x[SCROLL_JUMP-1]
	_ = x[SCROLL_STEP_BACKWARD-2]
	_ = x[SCROLL_STEP_FORWARD-3]
	_ = x[SCROLL_PAGE_BACKWARD-4]
	_ = x[SCROLL_PAGE_FORWARD-5]
	_ = x[SCROLL_STEP_UP-6]
	_ = x[SCROLL_STEP_DOWN-7]
	_ = x[SCROLL_PAGE_UP-8]
	_ = x[SCROLL_PAGE_DOWN-9]
	_ = x[SCROLL_STEP_LEFT-10]
	_ = x[SCROLL_STEP_RIGHT-11]
	_ = x[SCROLL_PAGE_LEFT-12]
	_ = x[SCROLL_PAGE_RIGHT-13]
	_ = x[SCROLL_START-14]
	_ = x[SCROLL_END-15]
}

const _ScrollType_name = "SCROLL_NONESCROLL_JUMPSCROLL_STEP_BACKWARDSCROLL_STEP_FORWARDSCROLL_PAGE_BACKWARDSCROLL_PAGE_FORWARDSCROLL_STEP_UPSCROLL_STEP_DOWNSCROLL_PAGE_UPSCROLL_PAGE_DOWNSCROLL_STEP_LEFTSCROLL_STEP_RIGHTSCROLL_PAGE_LEFTSCROLL_PAGE_RIGHTSCROLL_STARTSCROLL_END"

var _ScrollType_index = [...]uint8{0, 11, 22, 42, 61, 81, 100, 114, 130, 144, 160, 176, 193, 209, 226, 238, 248}

func (i ScrollType) String() string {
	if i >= ScrollType(len(_ScrollType_index)-1) {
		return "ScrollType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ScrollType_name[_ScrollType_index[i]:_ScrollType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SELECTION_NONE-0]
	_ = x[SELECTION_SINGLE-1]
	_ = x[SELECTION_BROWSE-2]
	_ = x[SELECTION_MULTIPLE-3]
	_ = x[SELECTION_EXTENDED-3]
}

const _SelectionMode_name = "SELECTION_NONESELECTION_SINGLESELECTION_BROWSESELECTION_MULTIPLE"

var _SelectionMode_index = [...]uint8{0, 14, 30, 46, 64}

func (i SelectionMode) String() string {
	if i >= SelectionMode(len(_SelectionMode_index)-1) {
		return "SelectionMode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SelectionMode_name[_SelectionMode_index[i]:_SelectionMode_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SHADOW_NONE-0]
	_ = x[SHADOW_IN-1]
	_ = x[SHADOW_OUT-2]
	_ = x[SHADOW_ETCHED_IN-3]
	_ = x[SHADOW_ETCHED_OUT-4]
}

const _ShadowType_name = "SHADOW_NONESHADOW_INSHADOW_OUTSHADOW_ETCHED_INSHADOW_ETCHED_OUT"

var _ShadowType_index = [...]uint8{0, 11, 20, 30, 46, 63}

func (i ShadowType) String() string {
	if i >= ShadowType(len(_ShadowType_index)-1) {
		return "ShadowType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ShadowType_name[_ShadowType_index[i]:_ShadowType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DIRECTION_LEFT-0]
	_ = x[DIRECTION_RIGHT-1]
}

const _SubmenuDirection_name = "DIRECTION_LEFTDIRECTION_RIGHT"

var _SubmenuDirection_index = [...]uint8{0, 14, 29}

func (i SubmenuDirection) String() string {
	if i >= SubmenuDirection(len(_SubmenuDirection_index)-1) {
		return "SubmenuDirection(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SubmenuDirection_name[_SubmenuDirection_index[i]:_SubmenuDirection_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TOP_BOTTOM-0]
	_ = x[LEFT_RIGHT-1]
}

const _SubmenuPlacement_name = "TOP_BOTTOMLEFT_RIGHT"

var _SubmenuPlacement_index = [...]uint8{0, 10, 20}

func (i SubmenuPlacement) String() string {
	if i >= SubmenuPlacement(len(_SubmenuPlacement_index)-1) {
		return "SubmenuPlacement(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SubmenuPlacement_name[_SubmenuPlacement_index[i]:_SubmenuPlacement_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TOOLBAR_ICONS-0]
	_ = x[TOOLBAR_TEXT-1]
	_ = x[TOOLBAR_BOTH-2]
	_ = x[TOOLBAR_BOTH_HORIZ-3]
}

const _ToolbarStyle_name = "TOOLBAR_ICONSTOOLBAR_TEXTTOOLBAR_BOTHTOOLBAR_BOTH_HORIZ"

var _ToolbarStyle_index = [...]uint8{0, 13, 25, 37, 55}

func (i ToolbarStyle) String() string {
	if i >= ToolbarStyle(len(_ToolbarStyle_index)-1) {
		return "ToolbarStyle(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ToolbarStyle_name[_ToolbarStyle_index[i]:_ToolbarStyle_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[UpdateContinuous-0]
	_ = x[UpdateDiscontinuous-1]
	_ = x[UpdateDelayed-2]
}

const _UpdateType_name = "UpdateContinuousUpdateDiscontinuousUpdateDelayed"

var _UpdateType_index = [...]uint8{0, 16, 35, 48}

func (i UpdateType) String() string {
	if i >= UpdateType(len(_UpdateType_index)-1) {
		return "UpdateType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _UpdateType_name[_UpdateType_index[i]:_UpdateType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VISIBILITY_NONE-0]
	_ = x[VISIBILITY_PARTIAL-1]
	_ = x[VISIBILITY_FULL-2]
}

const _Visibility_name = "VISIBILITY_NONEVISIBILITY_PARTIALVISIBILITY_FULL"

var _Visibility_index = [...]uint8{0, 15, 33, 48}

func (i Visibility) String() string {
	if i >= Visibility(len(_Visibility_index)-1) {
		return "Visibility(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Visibility_name[_Visibility_index[i]:_Visibility_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[WindowTopLevel-0]
	_ = x[WindowPopup-1]
}

const _WindowType_name = "WindowTopLevelWindowPopup"

var _WindowType_index = [...]uint8{0, 14, 25}

func (i WindowType) String() string {
	if i >= WindowType(len(_WindowType_index)-1) {
		return "WindowType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _WindowType_name[_WindowType_index[i]:_WindowType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[WindowTypeHintNormal-0]
	_ = x[WindowTypeHintDialog-1]
	_ = x[WindowTypeHintMenu-2]
	_ = x[WindowTypeHintToolbar-3]
	_ = x[WindowTypeHintSplashscreen-4]
	_ = x[WindowTypeHintUtility-5]
	_ = x[WindowTypeHintDock-6]
	_ = x[WindowTypeHintDesktop-7]
	_ = x[WindowTypeHintDropdownMenu-8]
	_ = x[WindowTypeHintPopupMenu-9]
	_ = x[WindowTypeHintTooltip-10]
	_ = x[WindowTypeHintNotification-11]
	_ = x[WindowTypeHintCombo-12]
	_ = x[WindowTypeHintDND-13]
}

const _WindowTypeHint_name = "WindowTypeHintNormalWindowTypeHintDialogWindowTypeHintMenuWindowTypeHintToolbarWindowTypeHintSplashscreenWindowTypeHintUtilityWindowTypeHintDockWindowTypeHintDesktopWindowTypeHintDropdownMenuWindowTypeHintPopupMenuWindowTypeHintTooltipWindowTypeHintNotificationWindowTypeHintComboWindowTypeHintDND"

var _WindowTypeHint_index = [...]uint16{0, 20, 40, 58, 79, 105, 126, 144, 165, 191, 214, 235, 261, 280, 297}

func (i WindowTypeHint) String() string {
	if i >= WindowTypeHint(len(_WindowTypeHint_index)-1) {
		return "WindowTypeHint(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _WindowTypeHint_name[_WindowTypeHint_index[i]:_WindowTypeHint_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[WindowEdgeNone-0]
	_ = x[WindowEdgeNorthWest-1]
	_ = x[WindowEdgeNorth-2]
	_ = x[WindowEdgeNorthEast-3]
	_ = x[WindowEdgeWest-4]
	_ = x[WindowEdgeEast-5]
	_ = x[WindowEdgeSouthWest-6]
	_ = x[WindowEdgeSouth-7]
	_ = x[WindowEdgeSouthEast-8]
}

const _WindowEdge_name = "WindowEdgeNoneWindowEdgeNorthWestWindowEdgeNorthWindowEdgeNorthEastWindowEdgeWestWindowEdgeEastWindowEdgeSouthWestWindowEdgeSouthWindowEdgeSouthEast"

var _WindowEdge_index = [...]uint8{0, 14, 33, 48, 67, 81, 95, 114, 129, 148}

func (i WindowEdge) String() string {
	if i >= WindowEdge(len(_WindowEdge_index)-1) {
		return "WindowEdge(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _WindowEdge_name[_WindowEdge_index[i]:_WindowEdge_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[GravityNorthWest-0]
	_ = x[GravityNorth-1]
	_ = x[GravityNorthEast-2]
	_ = x[GravityWest-3]
	_ = x[GravityCenter-4]
	_ = x[GravityEast-5]
	_ = x[GravitySouthWest-6]
	_ = x[GravitySouth-7]
	_ = x[GravitySouthEast-8]
	_ = x[GravityStatic-9]
}

const _Gravity_name = "GravityNorthWestGravityNorthGravityNorthEastGravityWestGravityCenterGravityEastGravitySouthWestGravitySouthGravitySouthEastGravityStatic"

var _Gravity_index = [...]uint8{0, 16, 28, 44, 55, 68, 79, 95, 107, 123, 136}

func (i Gravity) String() string {
	if i >= Gravity(len(_Gravity_index)-1) {
		return "Gravity(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Gravity_name[_Gravity_index[i]:_Gravity_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[WinPosNone-0]
	_ = x[WinPosCenter-1]
	_ = x[WinPosMouse-2]
	_ = x[WinPosCenterAlways-3]
	_ = x[WinPosCenterOnParent-4]
}

const _WindowPosition_name = "WinPosNoneWinPosCenterWinPosMouseWinPosCenterAlwaysWinPosCenterOnParent"

var _WindowPosition_index = [...]uint8{0, 10, 22, 33, 51, 71}

func (i WindowPosition) String() string {
	if i >= WindowPosition(len(_WindowPosition_index)-1) {
		return "WindowPosition(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _WindowPosition_name[_WindowPosition_index[i]:_WindowPosition_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SORT_ASCENDING-0]
	_ = x[SORT_DESCENDING-1]
}

const _SortType_name = "SORT_ASCENDINGSORT_DESCENDING"

var _SortType_index = [...]uint8{0, 14, 29}

func (i SortType) String() string {
	if i >= SortType(len(_SortType_index)-1) {
		return "SortType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SortType_name[_SortType_index[i]:_SortType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IM_PREEDIT_NOTHING-0]
	_ = x[IM_PREEDIT_CALLBACK-1]
	_ = x[IM_PREEDIT_NONE-2]
}

const _IMPreeditStyle_name = "IM_PREEDIT_NOTHINGIM_PREEDIT_CALLBACKIM_PREEDIT_NONE"

var _IMPreeditStyle_index = [...]uint8{0, 18, 37, 52}

func (i IMPreeditStyle) String() string {
	if i >= IMPreeditStyle(len(_IMPreeditStyle_index)-1) {
		return "IMPreeditStyle(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _IMPreeditStyle_name[_IMPreeditStyle_index[i]:_IMPreeditStyle_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IM_STATUS_NOTHING-0]
	_ = x[IM_STATUS_CALLBACK-1]
	_ = x[IM_STATUS_NONE-2]
}

const _IMStatusStyle_name = "IM_STATUS_NOTHINGIM_STATUS_CALLBACKIM_STATUS_NONE"

var _IMStatusStyle_index = [...]uint8{0, 17, 35, 49}

func (i IMStatusStyle) String() string {
	if i >= IMStatusStyle(len(_IMStatusStyle_index)-1) {
		return "IMStatusStyle(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _IMStatusStyle_name[_IMStatusStyle_index[i]:_IMStatusStyle_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PACK_DIRECTION_LTR-0]
	_ = x[PACK_DIRECTION_RTL-1]
	_ = x[PACK_DIRECTION_TTB-2]
	_ = x[PACK_DIRECTION_BTT-3]
}

const _PackDirection_name = "PACK_DIRECTION_LTRPACK_DIRECTION_RTLPACK_DIRECTION_TTBPACK_DIRECTION_BTT"

var _PackDirection_index = [...]uint8{0, 18, 36, 54, 72}

func (i PackDirection) String() string {
	if i >= PackDirection(len(_PackDirection_index)-1) {
		return "PackDirection(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PackDirection_name[_PackDirection_index[i]:_PackDirection_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PRINT_PAGES_ALL-0]
	_ = x[PRINT_PAGES_CURRENT-1]
	_ = x[PRINT_PAGES_RANGES-2]
	_ = x[PRINT_PAGES_SELECTION-3]
}

const _PrintPages_name = "PRINT_PAGES_ALLPRINT_PAGES_CURRENTPRINT_PAGES_RANGESPRINT_PAGES_SELECTION"

var _PrintPages_index = [...]uint8{0, 15, 34, 52, 73}

func (i PrintPages) String() string {
	if i >= PrintPages(len(_PrintPages_index)-1) {
		return "PrintPages(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PrintPages_name[_PrintPages_index[i]:_PrintPages_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PAGE_SET_ALL-0]
	_ = x[PAGE_SET_EVEN-1]
	_ = x[PAGE_SET_ODD-2]
}

const _PageSet_name = "PAGE_SET_ALLPAGE_SET_EVENPAGE_SET_ODD"

var _PageSet_index = [...]uint8{0, 12, 25, 37}

func (i PageSet) String() string {
	if i >= PageSet(len(_PageSet_index)-1) {
		return "PageSet(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PageSet_name[_PageSet_index[i]:_PageSet_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOM-0]
	_ = x[NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOP-1]
	_ = x[NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOM-2]
	_ = x[NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOP-3]
	_ = x[NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHT-4]
	_ = x[NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFT-5]
	_ = x[NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHT-6]
	_ = x[NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT-7]
}

const _NumberUpLayout_name = "NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOMNUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOPNUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOMNUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOPNUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHTNUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFTNUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHTNUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT"

var _NumberUpLayout_index = [...]uint16{0, 44, 88, 132, 176, 220, 264, 308, 352}

func (i NumberUpLayout) String() string {
	if i >= NumberUpLayout(len(_NumberUpLayout_index)-1) {
		return "NumberUpLayout(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NumberUpLayout_name[_NumberUpLayout_index[i]:_NumberUpLayout_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[UNIT_PIXEL-0]
	_ = x[UNIT_POINTS-1]
	_ = x[UNIT_INCH-2]
	_ = x[UNIT_MM-3]
}

const _Unit_name = "UNIT_PIXELUNIT_POINTSUNIT_INCHUNIT_MM"

var _Unit_index = [...]uint8{0, 10, 21, 30, 37}

func (i Unit) String() string {
	if i >= Unit(len(_Unit_index)-1) {
		return "Unit(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Unit_name[_Unit_index[i]:_Unit_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TREE_VIEW_GRID_LINES_NONE-0]
	_ = x[TREE_VIEW_GRID_LINES_HORIZONTAL-1]
	_ = x[TREE_VIEW_GRID_LINES_VERTICAL-2]
	_ = x[TREE_VIEW_GRID_LINES_BOTH-3]
}

const _TreeViewGridLines_name = "TREE_VIEW_GRID_LINES_NONETREE_VIEW_GRID_LINES_HORIZONTALTREE_VIEW_GRID_LINES_VERTICALTREE_VIEW_GRID_LINES_BOTH"

var _TreeViewGridLines_index = [...]uint8{0, 25, 56, 85, 110}

func (i TreeViewGridLines) String() string {
	if i >= TreeViewGridLines(len(_TreeViewGridLines_index)-1) {
		return "TreeViewGridLines(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TreeViewGridLines_name[_TreeViewGridLines_index[i]:_TreeViewGridLines_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FILE_CHOOSER_ACTION_OPEN-0]
	_ = x[FILE_CHOOSER_ACTION_SAVE-1]
	_ = x[FILE_CHOOSER_ACTION_SELECT_FOLDER-2]
	_ = x[FILE_CHOOSER_ACTION_CREATE_FOLDER-3]
}

const _FileChooserAction_name = "FILE_CHOOSER_ACTION_OPENFILE_CHOOSER_ACTION_SAVEFILE_CHOOSER_ACTION_SELECT_FOLDERFILE_CHOOSER_ACTION_CREATE_FOLDER"

var _FileChooserAction_index = [...]uint8{0, 24, 48, 81, 114}

func (i FileChooserAction) String() string {
	if i >= FileChooserAction(len(_FileChooserAction_index)-1) {
		return "FileChooserAction(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _FileChooserAction_name[_FileChooserAction_index[i]:_FileChooserAction_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FILE_CHOOSER_CONFIRMATION_CONFIRM-0]
	_ = x[FILE_CHOOSER_CONFIRMATION_ACCEPT_FILENAME-1]
	_ = x[FILE_CHOOSER_CONFIRMATION_SELECT_AGAIN-2]
}

const _FileChooserConfirmation_name = "FILE_CHOOSER_CONFIRMATION_CONFIRMFILE_CHOOSER_CONFIRMATION_ACCEPT_FILENAMEFILE_CHOOSER_CONFIRMATION_SELECT_AGAIN"

var _FileChooserConfirmation_index = [...]uint8{0, 33, 74, 112}

func (i FileChooserConfirmation) String() string {
	if i >= FileChooserConfirmation(len(_FileChooserConfirmation_index)-1) {
		return "FileChooserConfirmation(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _FileChooserConfirmation_name[_FileChooserConfirmation_index[i]:_FileChooserConfirmation_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FILE_CHOOSER_ERROR_NONEXISTENT-0]
	_ = x[FILE_CHOOSER_ERROR_BAD_FILENAME-1]
	_ = x[FILE_CHOOSER_ERROR_ALREADY_EXISTS-2]
	_ = x[FILE_CHOOSER_ERROR_INCOMPLETE_HOSTNAME-3]
}

const _FileChooserError_name = "FILE_CHOOSER_ERROR_NONEXISTENTFILE_CHOOSER_ERROR_BAD_FILENAMEFILE_CHOOSER_ERROR_ALREADY_EXISTSFILE_CHOOSER_ERROR_INCOMPLETE_HOSTNAME"

var _FileChooserError_index = [...]uint8{0, 30, 61, 94, 132}

func (i FileChooserError) String() string {
	if i >= FileChooserError(len(_FileChooserError_index)-1) {
		return "FileChooserError(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _FileChooserError_name[_FileChooserError_index[i]:_FileChooserError_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[LOAD_EMPTY-0]
	_ = x[LOAD_PRELOAD-1]
	_ = x[LOAD_LOADING-2]
	_ = x[LOAD_FINISHED-3]
}

const _LoadState_name = "LOAD_EMPTYLOAD_PRELOADLOAD_LOADINGLOAD_FINISHED"

var _LoadState_index = [...]uint8{0, 10, 22, 34, 47}

func (i LoadState) String() string {
	if i >= LoadState(len(_LoadState_index)-1) {
		return "LoadState(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LoadState_name[_LoadState_index[i]:_LoadState_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[RELOAD_EMPTY-0]
	_ = x[RELOAD_HAS_FOLDER-1]
}

const _ReloadState_name = "RELOAD_EMPTYRELOAD_HAS_FOLDER"

var _ReloadState_index = [...]uint8{0, 12, 29}

func (i ReloadState) String() string {
	if i >= ReloadState(len(_ReloadState_index)-1) {
		return "ReloadState(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ReloadState_name[_ReloadState_index[i]:_ReloadState_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[LOCATION_MODE_PATH_BAR-0]
	_ = x[LOCATION_MODE_FILENAME_ENTRY-1]
}

const _LocationMode_name = "LOCATION_MODE_PATH_BARLOCATION_MODE_FILENAME_ENTRY"

var _LocationMode_index = [...]uint8{0, 22, 50}

func (i LocationMode) String() string {
	if i >= LocationMode(len(_LocationMode_index)-1) {
		return "LocationMode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LocationMode_name[_LocationMode_index[i]:_LocationMode_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OPERATION_MODE_BROWSE-0]
	_ = x[OPERATION_MODE_SEARCH-1]
	_ = x[OPERATION_MODE_RECENT-2]
}

const _OperationMode_name = "OPERATION_MODE_BROWSEOPERATION_MODE_SEARCHOPERATION_MODE_RECENT"

var _OperationMode_index = [...]uint8{0, 21, 42, 63}

func (i OperationMode) String() string {
	if i >= OperationMode(len(_OperationMode_index)-1) {
		return "OperationMode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _OperationMode_name[_OperationMode_index[i]:_OperationMode_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[STARTUP_MODE_RECENT-0]
	_ = x[STARTUP_MODE_CWD-1]
}

const _StartupMode_name = "STARTUP_MODE_RECENTSTARTUP_MODE_CWD"

var _StartupMode_index = [...]uint8{0, 19, 35}

func (i StartupMode) String() string {
	if i >= StartupMode(len(_StartupMode_index)-1) {
		return "StartupMode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _StartupMode_name[_StartupMode_index[i]:_StartupMode_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FILE_CHOOSER_PROP_FIRST-0]
	_ = x[FILE_CHOOSER_PROP_ACTION-0]
	_ = x[FILE_CHOOSER_PROP_FILE_SYSTEM_BACKEND-2]
	_ = x[FILE_CHOOSER_PROP_FILTER-3]
	_ = x[FILE_CHOOSER_PROP_LOCAL_ONLY-4]
	_ = x[FILE_CHOOSER_PROP_PREVIEW_WIDGET-5]
	_ = x[FILE_CHOOSER_PROP_PREVIEW_WIDGET_ACTIVE-6]
	_ = x[FILE_CHOOSER_PROP_USE_PREVIEW_LABEL-7]
	_ = x[FILE_CHOOSER_PROP_EXTRA_WIDGET-8]
	_ = x[FILE_CHOOSER_PROP_SELECT_MULTIPLE-9]
	_ = x[FILE_CHOOSER_PROP_SHOW_HIDDEN-10]
	_ = x[FILE_CHOOSER_PROP_DO_OVERWRITE_CONFIRMATION-11]
	_ = x[FILE_CHOOSER_PROP_CREATE_FOLDERS-12]
	_ = x[FILE_CHOOSER_PROP_LAST-12]
}

const (
	_FileChooserProp_name_0 = "FILE_CHOOSER_PROP_FIRST"
	_FileChooserProp_name_1 = "FILE_CHOOSER_PROP_FILE_SYSTEM_BACKENDFILE_CHOOSER_PROP_FILTERFILE_CHOOSER_PROP_LOCAL_ONLYFILE_CHOOSER_PROP_PREVIEW_WIDGETFILE_CHOOSER_PROP_PREVIEW_WIDGET_ACTIVEFILE_CHOOSER_PROP_USE_PREVIEW_LABELFILE_CHOOSER_PROP_EXTRA_WIDGETFILE_CHOOSER_PROP_SELECT_MULTIPLEFILE_CHOOSER_PROP_SHOW_HIDDENFILE_CHOOSER_PROP_DO_OVERWRITE_CONFIRMATIONFILE_CHOOSER_PROP_CREATE_FOLDERS"
)

var (
	_FileChooserProp_index_1 = [...]uint16{0, 37, 61, 89, 121, 160, 195, 225, 258, 287, 330, 362}
)

func (i FileChooserProp) String() string {
	switch {
	case i == 0:
		return _FileChooserProp_name_0
	case 2 <= i && i <= 12:
		i -= 2
		return _FileChooserProp_name_1[_FileChooserProp_index_1[i]:_FileChooserProp_index_1[i+1]]
	default:
		return "FileChooserProp(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ICON_THEME_NOT_FOUND-0]
	_ = x[ICON_THEME_FAILED-1]
}

const _IconThemeError_name = "ICON_THEME_NOT_FOUNDICON_THEME_FAILED"

var _IconThemeError_index = [...]uint8{0, 20, 37}

func (i IconThemeError) String() string {
	if i >= IconThemeError(len(_IconThemeError_index)-1) {
		return "IconThemeError(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _IconThemeError_name[_IconThemeError_index[i]:_IconThemeError_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[BUTTONS_NONE-0]
	_ = x[BUTTONS_OK-1]
	_ = x[BUTTONS_CLOSE-2]
	_ = x[BUTTONS_CANCEL-3]
	_ = x[BUTTONS_YES_NO-4]
	_ = x[BUTTONS_OK_CANCEL-5]
}

const _ButtonsType_name = "BUTTONS_NONEBUTTONS_OKBUTTONS_CLOSEBUTTONS_CANCELBUTTONS_YES_NOBUTTONS_OK_CANCEL"

var _ButtonsType_index = [...]uint8{0, 12, 22, 35, 49, 63, 80}

func (i ButtonsType) String() string {
	if i >= ButtonsType(len(_ButtonsType_index)-1) {
		return "ButtonsType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ButtonsType_name[_ButtonsType_index[i]:_ButtonsType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NOTEBOOK_TAB_FIRST-0]
	_ = x[NOTEBOOK_TAB_LAST-1]
}

const _NotebookTab_name = "NOTEBOOK_TAB_FIRSTNOTEBOOK_TAB_LAST"

var _NotebookTab_index = [...]uint8{0, 18, 35}

func (i NotebookTab) String() string {
	if i >= NotebookTab(len(_NotebookTab_index)-1) {
		return "NotebookTab(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NotebookTab_name[_NotebookTab_index[i]:_NotebookTab_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ARC_READABLE-1]
	_ = x[ARC_WRITABLE-2]
	_ = x[ARC_CONSTRUCT-3]
	_ = x[ARC_CONSTRUCT_ONLY-3]
	_ = x[ARC_CHILD_ARG-16]
}

const (
	_ArgFlags_name_0 = "ARC_READABLEARC_WRITABLEARC_CONSTRUCT"
	_ArgFlags_name_1 = "ARC_CHILD_ARG"
)

var (
	_ArgFlags_index_0 = [...]uint8{0, 12, 24, 37}
)

func (i ArgFlags) String() string {
	switch {
	case 1 <= i && i <= 3:
		i -= 1
		return _ArgFlags_name_0[_ArgFlags_index_0[i]:_ArgFlags_index_0[i+1]]
	case i == 16:
		return _ArgFlags_name_1
	default:
		return "ArgFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PROGRESS_CONTINUOUS-0]
	_ = x[PROGRESS_DISCRETE-1]
}

const _ProgressBarStyle_name = "PROGRESS_CONTINUOUSPROGRESS_DISCRETE"

var _ProgressBarStyle_index = [...]uint8{0, 19, 36}

func (i ProgressBarStyle) String() string {
	if i >= ProgressBarStyle(len(_ProgressBarStyle_index)-1) {
		return "ProgressBarStyle(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ProgressBarStyle_name[_ProgressBarStyle_index[i]:_ProgressBarStyle_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PROGRESS_LEFT_TO_RIGHT-0]
	_ = x[PROGRESS_RIGHT_TO_LEFT-1]
	_ = x[PROGRESS_BOTTOM_TO_TOP-2]
	_ = x[PROGRESS_TOP_TO_BOTTOM-3]
}

const _ProgressBarOrientation_name = "PROGRESS_LEFT_TO_RIGHTPROGRESS_RIGHT_TO_LEFTPROGRESS_BOTTOM_TO_TOPPROGRESS_TOP_TO_BOTTOM"

var _ProgressBarOrientation_index = [...]uint8{0, 22, 44, 66, 88}

func (i ProgressBarOrientation) String() string {
	if i >= ProgressBarOrientation(len(_ProgressBarOrientation_index)-1) {
		return "ProgressBarOrientation(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ProgressBarOrientation_name[_ProgressBarOrientation_index[i]:_ProgressBarOrientation_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[RC_TOKEN_INVALID-15]
	_ = x[RC_TOKEN_INCLUDE-1]
	_ = x[RC_TOKEN_NORMAL-2]
	_ = x[RC_TOKEN_ACTIVE-3]
	_ = x[RC_TOKEN_PRELIGHT-4]
	_ = x[RC_TOKEN_SELECTED-5]
	_ = x[RC_TOKEN_INSENSITIVE-6]
	_ = x[RC_TOKEN_FG-7]
	_ = x[RC_TOKEN_BG-8]
	_ = x[RC_TOKEN_TEXT-9]
	_ = x[RC_TOKEN_BASE-10]
	_ = x[RC_TOKEN_XTHICKNESS-11]
	_ = x[RC_TOKEN_YTHICKNESS-12]
	_ = x[RC_TOKEN_FONT-13]
	_ = x[RC_TOKEN_FONTSET-14]
	_ = x[RC_TOKEN_FONT_NAME-15]
	_ = x[RC_TOKEN_BC_PIXMAP-16]
	_ = x[RC_TOKEN_PIXMAP_PATH-17]
	_ = x[RC_TOKEN_STYLE-18]
	_ = x[RC_TOKEN_BINDING-19]
	_ = x[RC_TOKEN_BIND-20]
	_ = x[RC_TOKEN_WIDGET-21]
	_ = x[RC_TOKEN_WIDGET_CLASS-22]
	_ = x[RC_TOKEN_CLASS-23]
	_ = x[RC_TOKEN_LOWEST-24]
	_ = x[RC_TOKEN_CTK-25]
	_ = x[RC_TOKEN_APPLICATION-26]
	_ = x[RC_TOKEN_THEME-27]
	_ = x[RC_TOKEN_RC-28]
	_ = x[RC_TOKEN_HIGHEST-29]
	_ = x[RC_TOKEN_ENGINE-30]
	_ = x[RC_TOKEN_MODULE_PATH-31]
	_ = x[RC_TOKEN_IM_MODULE_PATH-32]
	_ = x[RC_TOKEN_IM_MODULE_FILE-33]
	_ = x[RC_TOKEN_STOCK-34]
	_ = x[RC_TOKEN_LTR-35]
	_ = x[RC_TOKEN_RTL-36]
	_ = x[RC_TOKEN_COLOR-37]
	_ = x[RC_TOKEN_UNBIND-38]
	_ = x[RC_TOKEN_LAST-39]
}

const _RcTokenType_name = "RC_TOKEN_INCLUDERC_TOKEN_NORMALRC_TOKEN_ACTIVERC_TOKEN_PRELIGHTRC_TOKEN_SELECTEDRC_TOKEN_INSENSITIVERC_TOKEN_FGRC_TOKEN_BGRC_TOKEN_TEXTRC_TOKEN_BASERC_TOKEN_XTHICKNESSRC_TOKEN_YTHICKNESSRC_TOKEN_FONTRC_TOKEN_FONTSETRC_TOKEN_INVALIDRC_TOKEN_BC_PIXMAPRC_TOKEN_PIXMAP_PATHRC_TOKEN_STYLERC_TOKEN_BINDINGRC_TOKEN_BINDRC_TOKEN_WIDGETRC_TOKEN_WIDGET_CLASSRC_TOKEN_CLASSRC_TOKEN_LOWESTRC_TOKEN_CTKRC_TOKEN_APPLICATIONRC_TOKEN_THEMERC_TOKEN_RCRC_TOKEN_HIGHESTRC_TOKEN_ENGINERC_TOKEN_MODULE_PATHRC_TOKEN_IM_MODULE_PATHRC_TOKEN_IM_MODULE_FILERC_TOKEN_STOCKRC_TOKEN_LTRRC_TOKEN_RTLRC_TOKEN_COLORRC_TOKEN_UNBINDRC_TOKEN_LAST"

var _RcTokenType_index = [...]uint16{0, 16, 31, 46, 63, 80, 100, 111, 122, 135, 148, 167, 186, 199, 215, 231, 249, 269, 283, 299, 312, 327, 348, 362, 377, 389, 409, 423, 434, 450, 465, 485, 508, 531, 545, 557, 569, 583, 598, 611}

func (i RcTokenType) String() string {
	i -= 1
	if i >= RcTokenType(len(_RcTokenType_index)-1) {
		return "RcTokenType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _RcTokenType_name[_RcTokenType_index[i]:_RcTokenType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[RECENT_SORT_NONE-0]
	_ = x[RECENT_SORT_MRU-1]
	_ = x[RECENT_SORT_LRU-2]
	_ = x[RECENT_SORT_CUSTOM-3]
}

const _RecentSortType_name = "RECENT_SORT_NONERECENT_SORT_MRURECENT_SORT_LRURECENT_SORT_CUSTOM"

var _RecentSortType_index = [...]uint8{0, 16, 31, 46, 64}

func (i RecentSortType) String() string {
	if i >= RecentSortType(len(_RecentSortType_index)-1) {
		return "RecentSortType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RecentSortType_name[_RecentSortType_index[i]:_RecentSortType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[RECENT_CHOOSER_ERROR_NOT_FOUND-0]
	_ = x[RECENT_CHOOSER_ERROR_INVALID_URI-1]
}

const _RecentChooserError_name = "RECENT_CHOOSER_ERROR_NOT_FOUNDRECENT_CHOOSER_ERROR_INVALID_URI"

var _RecentChooserError_index = [...]uint8{0, 30, 62}

func (i RecentChooserError) String() string {
	if i >= RecentChooserError(len(_RecentChooserError_index)-1) {
		return "RecentChooserError(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RecentChooserError_name[_RecentChooserError_index[i]:_RecentChooserError_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[RECENT_CHOOSER_PROP_FIRST-0]
	_ = x[RECENT_CHOOSER_PROP_RECENT_MANAGER-1]
	_ = x[RECENT_CHOOSER_PROP_SHOW_PRIVATE-2]
	_ = x[RECENT_CHOOSER_PROP_SHOW_NOT_FOUND-3]
	_ = x[RECENT_CHOOSER_PROP_SHOW_TIPS-4]
	_ = x[RECENT_CHOOSER_PROP_SHOW_ICONS-5]
	_ = x[RECENT_CHOOSER_PROP_SELECT_MULTIPLE-6]
	_ = x[RECENT_CHOOSER_PROP_LIMIT-7]
	_ = x[RECENT_CHOOSER_PROP_LOCAL_ONLY-8]
	_ = x[RECENT_CHOOSER_PROP_SORT_TYPE-9]
	_ = x[RECENT_CHOOSER_PROP_FILTER-10]
	_ = x[RECENT_CHOOSER_PROP_LAST-11]
}

const _RecentChooserProp_name = "RECENT_CHOOSER_PROP_FIRSTRECENT_CHOOSER_PROP_RECENT_MANAGERRECENT_CHOOSER_PROP_SHOW_PRIVATERECENT_CHOOSER_PROP_SHOW_NOT_FOUNDRECENT_CHOOSER_PROP_SHOW_TIPSRECENT_CHOOSER_PROP_SHOW_ICONSRECENT_CHOOSER_PROP_SELECT_MULTIPLERECENT_CHOOSER_PROP_LIMITRECENT_CHOOSER_PROP_LOCAL_ONLYRECENT_CHOOSER_PROP_SORT_TYPERECENT_CHOOSER_PROP_FILTERRECENT_CHOOSER_PROP_LAST"

var _RecentChooserProp_index = [...]uint16{0, 25, 59, 91, 125, 154, 184, 219, 244, 274, 303, 329, 353}

func (i RecentChooserProp) String() string {
	if i >= RecentChooserProp(len(_RecentChooserProp_index)-1) {
		return "RecentChooserProp(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RecentChooserProp_name[_RecentChooserProp_index[i]:_RecentChooserProp_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[RECENT_MANAGER_ERROR_NOT_FOUND-0]
	_ = x[RECENT_MANAGER_ERROR_INVALID_URI-1]
	_ = x[RECENT_MANAGER_ERROR_INVALID_ENCODING-2]
	_ = x[RECENT_MANAGER_ERROR_NOT_REGISTERED-3]
	_ = x[RECENT_MANAGER_ERROR_READ-4]
	_ = x[RECENT_MANAGER_ERROR_WRITE-5]
	_ = x[RECENT_MANAGER_ERROR_UNKNOWN-6]
}

const _RecentManagerError_name = "RECENT_MANAGER_ERROR_NOT_FOUNDRECENT_MANAGER_ERROR_INVALID_URIRECENT_MANAGER_ERROR_INVALID_ENCODINGRECENT_MANAGER_ERROR_NOT_REGISTEREDRECENT_MANAGER_ERROR_READRECENT_MANAGER_ERROR_WRITERECENT_MANAGER_ERROR_UNKNOWN"

var _RecentManagerError_index = [...]uint8{0, 30, 62, 99, 134, 159, 185, 213}

func (i RecentManagerError) String() string {
	if i >= RecentManagerError(len(_RecentManagerError_index)-1) {
		return "RecentManagerError(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RecentManagerError_name[_RecentManagerError_index[i]:_RecentManagerError_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SIZE_GROUP_NONE-0]
	_ = x[SIZE_GROUP_HORIZONTAL-1]
	_ = x[SIZE_GROUP_VERTICAL-2]
	_ = x[SIZE_GROUP_BOTH-3]
}

const _SizeGroupMode_name = "SIZE_GROUP_NONESIZE_GROUP_HORIZONTALSIZE_GROUP_VERTICALSIZE_GROUP_BOTH"

var _SizeGroupMode_index = [...]uint8{0, 15, 36, 55, 70}

func (i SizeGroupMode) String() string {
	if i >= SizeGroupMode(len(_SizeGroupMode_index)-1) {
		return "SizeGroupMode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SizeGroupMode_name[_SizeGroupMode_index[i]:_SizeGroupMode_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[UPDATE_ALWAYS-0]
	_ = x[UPDATE_IF_VALID-1]
}

const _SpinButtonUpdatePolicy_name = "UPDATE_ALWAYSUPDATE_IF_VALID"

var _SpinButtonUpdatePolicy_index = [...]uint8{0, 13, 28}

func (i SpinButtonUpdatePolicy) String() string {
	if i >= SpinButtonUpdatePolicy(len(_SpinButtonUpdatePolicy_index)-1) {
		return "SpinButtonUpdatePolicy(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SpinButtonUpdatePolicy_name[_SpinButtonUpdatePolicy_index[i]:_SpinButtonUpdatePolicy_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SPIN_STEP_FORWARD-0]
	_ = x[SPIN_STEP_BACKWARD-1]
	_ = x[SPIN_PAGE_FORWARD-2]
	_ = x[SPIN_PAGE_BACKWARD-3]
	_ = x[SPIN_HOME-4]
	_ = x[SPIN_END-5]
	_ = x[SPIN_USER_DEFINED-6]
}

const _SpinType_name = "SPIN_STEP_FORWARDSPIN_STEP_BACKWARDSPIN_PAGE_FORWARDSPIN_PAGE_BACKWARDSPIN_HOMESPIN_ENDSPIN_USER_DEFINED"

var _SpinType_index = [...]uint8{0, 17, 35, 52, 70, 79, 87, 104}

func (i SpinType) String() string {
	if i >= SpinType(len(_SpinType_index)-1) {
		return "SpinType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SpinType_name[_SpinType_index[i]:_SpinType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TEXT_BUFFER_TARGET_INFO_BUFFER_CONTENTS - -1]
	_ = x[TEXT_BUFFER_TARGET_INFO_RICH_TEXT - -2]
	_ = x[TEXT_BUFFER_TARGET_INFO_TEXT - -3]
}

const _TextBufferTargetInfo_name = "TEXT_BUFFER_TARGET_INFO_TEXTTEXT_BUFFER_TARGET_INFO_RICH_TEXTTEXT_BUFFER_TARGET_INFO_BUFFER_CONTENTS"

var _TextBufferTargetInfo_index = [...]uint8{0, 28, 61, 100}

func (i TextBufferTargetInfo) String() string {
	i -= -3
	if i < 0 || i >= TextBufferTargetInfo(len(_TextBufferTargetInfo_index)-1) {
		return "TextBufferTargetInfo(" + strconv.FormatInt(int64(i+-3), 10) + ")"
	}
	return _TextBufferTargetInfo_name[_TextBufferTargetInfo_index[i]:_TextBufferTargetInfo_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TEXT_WINDOW_PRIVATE-0]
	_ = x[TEXT_WINDOW_WIDGET-1]
	_ = x[TEXT_WINDOW_TEXT-2]
	_ = x[TEXT_WINDOW_LEFT-3]
	_ = x[TEXT_WINDOW_RIGHT-4]
	_ = x[TEXT_WINDOW_TOP-5]
	_ = x[TEXT_WINDOW_BOTTOM-6]
}

const _TextWindowType_name = "TEXT_WINDOW_PRIVATETEXT_WINDOW_WIDGETTEXT_WINDOW_TEXTTEXT_WINDOW_LEFTTEXT_WINDOW_RIGHTTEXT_WINDOW_TOPTEXT_WINDOW_BOTTOM"

var _TextWindowType_index = [...]uint8{0, 19, 37, 53, 69, 86, 101, 119}

func (i TextWindowType) String() string {
	if i >= TextWindowType(len(_TextWindowType_index)-1) {
		return "TextWindowType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TextWindowType_name[_TextWindowType_index[i]:_TextWindowType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TOOLBAR_CHILD_SPACE-0]
	_ = x[TOOLBAR_CHILD_BUTTON-1]
	_ = x[TOOLBAR_CHILD_TOGGLEBUTTON-2]
	_ = x[TOOLBAR_CHILD_RADIOBUTTON-3]
	_ = x[TOOLBAR_CHILD_WIDGET-4]
}

const _ToolbarChildType_name = "TOOLBAR_CHILD_SPACETOOLBAR_CHILD_BUTTONTOOLBAR_CHILD_TOGGLEBUTTONTOOLBAR_CHILD_RADIOBUTTONTOOLBAR_CHILD_WIDGET"

var _ToolbarChildType_index = [...]uint8{0, 19, 39, 65, 90, 110}

func (i ToolbarChildType) String() string {
	if i >= ToolbarChildType(len(_ToolbarChildType_index)-1) {
		return "ToolbarChildType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ToolbarChildType_name[_ToolbarChildType_index[i]:_ToolbarChildType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TOOLBAR_SPACE_EMPTY-0]
	_ = x[TOOLBAR_SPACE_LINE-1]
}

const _ToolbarSpaceStyle_name = "TOOLBAR_SPACE_EMPTYTOOLBAR_SPACE_LINE"

var _ToolbarSpaceStyle_index = [...]uint8{0, 19, 37}

func (i ToolbarSpaceStyle) String() string {
	if i >= ToolbarSpaceStyle(len(_ToolbarSpaceStyle_index)-1) {
		return "ToolbarSpaceStyle(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ToolbarSpaceStyle_name[_ToolbarSpaceStyle_index[i]:_ToolbarSpaceStyle_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TREE_VIEW_LINE-0]
	_ = x[TREE_VIEW_ITEM-1]
}

const _TreeViewMode_name = "TREE_VIEW_LINETREE_VIEW_ITEM"

var _TreeViewMode_index = [...]uint8{0, 14, 28}

func (i TreeViewMode) String() string {
	if i >= TreeViewMode(len(_TreeViewMode_index)-1) {
		return "TreeViewMode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TreeViewMode_name[_TreeViewMode_index[i]:_TreeViewMode_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TREE_VIEW_DROP_BEFORE-0]
	_ = x[TREE_VIEW_DROP_AFTER-1]
	_ = x[TREE_VIEW_DROP_INTO_OR_BEFORE-2]
	_ = x[TREE_VIEW_DROP_INTO_OR_AFTER-3]
}

const _TreeViewDropPosition_name = "TREE_VIEW_DROP_BEFORETREE_VIEW_DROP_AFTERTREE_VIEW_DROP_INTO_OR_BEFORETREE_VIEW_DROP_INTO_OR_AFTER"

var _TreeViewDropPosition_index = [...]uint8{0, 21, 41, 70, 98}

func (i TreeViewDropPosition) String() string {
	if i >= TreeViewDropPosition(len(_TreeViewDropPosition_index)-1) {
		return "TreeViewDropPosition(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TreeViewDropPosition_name[_TreeViewDropPosition_index[i]:_TreeViewDropPosition_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TREE_VIEW_COLUMN_GROW_ONLY-0]
	_ = x[TREE_VIEW_COLUMN_AUTOSIZE-1]
	_ = x[TREE_VIEW_COLUMN_FIXED-2]
}

const _TreeViewColumnSizing_name = "TREE_VIEW_COLUMN_GROW_ONLYTREE_VIEW_COLUMN_AUTOSIZETREE_VIEW_COLUMN_FIXED"

var _TreeViewColumnSizing_index = [...]uint8{0, 26, 51, 73}

func (i TreeViewColumnSizing) String() string {
	if i >= TreeViewColumnSizing(len(_TreeViewColumnSizing_index)-1) {
		return "TreeViewColumnSizing(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TreeViewColumnSizing_name[_TreeViewColumnSizing_index[i]:_TreeViewColumnSizing_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[WIDGET_HELP_TOOLTIP-0]
	_ = x[WIDGET_HELP_WHATS_THIS-1]
}

const _WidgetHelpType_name = "WIDGET_HELP_TOOLTIPWIDGET_HELP_WHATS_THIS"

var _WidgetHelpType_index = [...]uint8{0, 19, 41}

func (i WidgetHelpType) String() string {
	if i >= WidgetHelpType(len(_WidgetHelpType_index)-1) {
		return "WidgetHelpType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _WidgetHelpType_name[_WidgetHelpType_index[i]:_WidgetHelpType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ERR_UNKNOWN-0]
	_ = x[ERR_UNEXP_EOF-1]
	_ = x[ERR_UNEXP_EOF_IN_STRING-2]
	_ = x[ERR_UNEXP_EOF_IN_COMMENT-3]
	_ = x[ERR_NON_DIGIT_IN_CONST-4]
	_ = x[ERR_DIGIT_RADIX-5]
	_ = x[ERR_FLOAT_RADIX-6]
	_ = x[ERR_FLOAT_MALFORMED-7]
}

const _ErrorType_name = "ERR_UNKNOWNERR_UNEXP_EOFERR_UNEXP_EOF_IN_STRINGERR_UNEXP_EOF_IN_COMMENTERR_NON_DIGIT_IN_CONSTERR_DIGIT_RADIXERR_FLOAT_RADIXERR_FLOAT_MALFORMED"

var _ErrorType_index = [...]uint8{0, 11, 24, 47, 71, 93, 108, 123, 142}

func (i ErrorType) String() string {
	if i >= ErrorType(len(_ErrorType_index)-1) {
		return "ErrorType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ErrorType_name[_ErrorType_index[i]:_ErrorType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TOKEN_EOF-0]
	_ = x[TOKEN_NONE-256]
	_ = x[TOKEN_ERROR-2]
	_ = x[TOKEN_CHAR-3]
	_ = x[TOKEN_BINARY-4]
	_ = x[TOKEN_OCTAL-5]
	_ = x[TOKEN_INT-6]
	_ = x[TOKEN_HEX-7]
	_ = x[TOKEN_FLOAT-8]
	_ = x[TOKEN_STRING-9]
	_ = x[TOKEN_SYMBOL-10]
	_ = x[TOKEN_IDENTIFIER-11]
	_ = x[TOKEN_IDENTIFIER_NULL-12]
	_ = x[TOKEN_COMMENT_SINGLE-13]
	_ = x[TOKEN_COMMENT_MULTI-14]
	_ = x[TOKEN_LAST-15]
}

const (
	_TokenType_name_0 = "TOKEN_EOF"
	_TokenType_name_1 = "TOKEN_ERRORTOKEN_CHARTOKEN_BINARYTOKEN_OCTALTOKEN_INTTOKEN_HEXTOKEN_FLOATTOKEN_STRINGTOKEN_SYMBOLTOKEN_IDENTIFIERTOKEN_IDENTIFIER_NULLTOKEN_COMMENT_SINGLETOKEN_COMMENT_MULTITOKEN_LAST"
	_TokenType_name_2 = "TOKEN_NONE"
)

var (
	_TokenType_index_1 = [...]uint8{0, 11, 21, 33, 44, 53, 62, 73, 85, 97, 113, 134, 154, 173, 183}
)

func (i TokenType) String() string {
	switch {
	case i == 0:
		return _TokenType_name_0
	case 2 <= i && i <= 15:
		i -= 2
		return _TokenType_name_1[_TokenType_index_1[i]:_TokenType_index_1[i+1]]
	case i == 256:
		return _TokenType_name_2
	default:
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EXTENSION_EVENTS_NONE-0]
	_ = x[EXTENSION_EVENTS_ALL-1]
	_ = x[EXTENSION_EVENTS_CURSOR-2]
}

const _ExtensionMode_name = "EXTENSION_EVENTS_NONEEXTENSION_EVENTS_ALLEXTENSION_EVENTS_CURSOR"

var _ExtensionMode_index = [...]uint8{0, 21, 41, 64}

func (i ExtensionMode) String() string {
	if i >= ExtensionMode(len(_ExtensionMode_index)-1) {
		return "ExtensionMode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ExtensionMode_name[_ExtensionMode_index[i]:_ExtensionMode_index[i+1]]
}
